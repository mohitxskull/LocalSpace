// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type ApiV1CustomerAuthSigninPost = {
  request: MakeTuyauRequest<
    InferInput<(typeof import('../app/controllers/customer/auth/signin_controller.ts'))['input']>
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/signin_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerAuthSignupPost = {
  request: MakeTuyauRequest<
    InferInput<(typeof import('../app/controllers/customer/auth/signup_controller.ts'))['input']>
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/signup_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerAuthVerifyPost = {
  request: MakeTuyauRequest<
    InferInput<(typeof import('../app/controllers/customer/auth/verify_controller.ts'))['input']>
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/verify_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerAuthVerifyResendPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/auth/verify_resend_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/verify_resend_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerAuthProfileGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/profile/show_controller.ts').default['handle'],
    false
  >
}
type ApiV1CustomerAuthPasswordUpdatePost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/auth/password/update_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/password/update_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerAuthPasswordForgotPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/auth/password/forgot_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/password/forgot_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerAuthPasswordResetPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/auth/password/reset_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/auth/password/reset_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspacePost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/create_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/create_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceGetHead = {
  request: MakeTuyauRequest<
    InferInput<(typeof import('../app/controllers/customer/workspace/list_controller.ts'))['input']>
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/list_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdGetHead = {
  request: MakeTuyauRequest<
    InferInput<(typeof import('../app/controllers/customer/workspace/show_controller.ts'))['input']>
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/show_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdPut = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/update_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/update_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdDelete = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/delete_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/delete_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdTransferPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/transfer_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/transfer_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdMemberPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/member/create_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/member/create_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdMemberIdPut = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/member/update_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/member/update_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdMemberIdDelete = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/member/delete_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/member/delete_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdProfileGetHead = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/profile/show_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/profile/show_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdProfileLeavePost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/profile/leave_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/profile/leave_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/create_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/create_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogGetHead = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/list_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/list_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogIdGetHead = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/show_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/show_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogIdPut = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/update_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/update_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogIdDelete = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/delete_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/delete_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogIdPublishPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/publish_controller.ts'))['input']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/publish_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogIdUnpublishPost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/unpublish_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/unpublish_controller.ts').default['handle'],
    true
  >
}
type ApiV1CustomerWorkspaceIdBlogIdArchivePost = {
  request: MakeTuyauRequest<
    InferInput<
      (typeof import('../app/controllers/customer/workspace/blog/archive_controller.ts'))['validator']
    >
  >
  response: MakeTuyauResponse<
    import('../app/controllers/customer/workspace/blog/archive_controller.ts').default['handle'],
    true
  >
}
type ApiV1PingGetHead = {
  request: MakeTuyauRequest<
    InferInput<(typeof import('../app/controllers/ping_controller.ts'))['input']>
  >
  response: MakeTuyauResponse<
    import('../app/controllers/ping_controller.ts').default['handle'],
    true
  >
}
export interface ApiDefinition {
  api: {
    v1: {
      customer: {
        auth: {
          signin: {
            $url: {}
            $post: ApiV1CustomerAuthSigninPost
          }
          signup: {
            $url: {}
            $post: ApiV1CustomerAuthSignupPost
          }
          verify: {
            $url: {}
            $post: ApiV1CustomerAuthVerifyPost
            resend: {
              $url: {}
              $post: ApiV1CustomerAuthVerifyResendPost
            }
          }
          profile: {
            $url: {}
            $get: ApiV1CustomerAuthProfileGetHead
            $head: ApiV1CustomerAuthProfileGetHead
          }
          password: {
            update: {
              $url: {}
              $post: ApiV1CustomerAuthPasswordUpdatePost
            }
            forgot: {
              $url: {}
              $post: ApiV1CustomerAuthPasswordForgotPost
            }
            reset: {
              $url: {}
              $post: ApiV1CustomerAuthPasswordResetPost
            }
          }
        }
        workspace: {
          '$url': {}
          '$post': ApiV1CustomerWorkspacePost
          '$get': ApiV1CustomerWorkspaceGetHead
          '$head': ApiV1CustomerWorkspaceGetHead
          ':workspaceId': {
            $url: {}
            $get: ApiV1CustomerWorkspaceIdGetHead
            $head: ApiV1CustomerWorkspaceIdGetHead
            $put: ApiV1CustomerWorkspaceIdPut
            $delete: ApiV1CustomerWorkspaceIdDelete
            transfer: {
              $url: {}
              $post: ApiV1CustomerWorkspaceIdTransferPost
            }
            member: {
              '$url': {}
              '$post': ApiV1CustomerWorkspaceIdMemberPost
              ':memberId': {
                $url: {}
                $put: ApiV1CustomerWorkspaceIdMemberIdPut
                $delete: ApiV1CustomerWorkspaceIdMemberIdDelete
              }
            }
            profile: {
              $url: {}
              $get: ApiV1CustomerWorkspaceIdProfileGetHead
              $head: ApiV1CustomerWorkspaceIdProfileGetHead
              leave: {
                $url: {}
                $post: ApiV1CustomerWorkspaceIdProfileLeavePost
              }
            }
            blog: {
              '$url': {}
              '$post': ApiV1CustomerWorkspaceIdBlogPost
              '$get': ApiV1CustomerWorkspaceIdBlogGetHead
              '$head': ApiV1CustomerWorkspaceIdBlogGetHead
              ':blogId': {
                $url: {}
                $get: ApiV1CustomerWorkspaceIdBlogIdGetHead
                $head: ApiV1CustomerWorkspaceIdBlogIdGetHead
                $put: ApiV1CustomerWorkspaceIdBlogIdPut
                $delete: ApiV1CustomerWorkspaceIdBlogIdDelete
                publish: {
                  $url: {}
                  $post: ApiV1CustomerWorkspaceIdBlogIdPublishPost
                }
                unpublish: {
                  $url: {}
                  $post: ApiV1CustomerWorkspaceIdBlogIdUnpublishPost
                }
                archive: {
                  $url: {}
                  $post: ApiV1CustomerWorkspaceIdBlogIdArchivePost
                }
              }
            }
          }
        }
      }
      ping: {
        $url: {}
        $get: ApiV1PingGetHead
        $head: ApiV1PingGetHead
      }
    }
  }
}
const routes = [
  {
    params: [],
    name: 'prometheus.metrics',
    path: '/api/v1/admin/metrics',
    method: ['GET', 'HEAD'],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.signin',
    path: '/api/v1/customer/auth/signin',
    method: ['POST'],
    types: {} as ApiV1CustomerAuthSigninPost,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.signup',
    path: '/api/v1/customer/auth/signup',
    method: ['POST'],
    types: {} as ApiV1CustomerAuthSignupPost,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.verify',
    path: '/api/v1/customer/auth/verify',
    method: ['POST'],
    types: {} as ApiV1CustomerAuthVerifyPost,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.verify.resend',
    path: '/api/v1/customer/auth/verify/resend',
    method: ['POST'],
    types: {} as ApiV1CustomerAuthVerifyResendPost,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.profile.show',
    path: '/api/v1/customer/auth/profile',
    method: ['GET', 'HEAD'],
    types: {} as ApiV1CustomerAuthProfileGetHead,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.password.update',
    path: '/api/v1/customer/auth/password/update',
    method: ['POST'],
    types: {} as ApiV1CustomerAuthPasswordUpdatePost,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.password.forgot',
    path: '/api/v1/customer/auth/password/forgot',
    method: ['POST'],
    types: {} as ApiV1CustomerAuthPasswordForgotPost,
  },
  {
    params: [],
    name: 'api.v1.customer.auth.password.reset',
    path: '/api/v1/customer/auth/password/reset',
    method: ['POST'],
    types: {} as ApiV1CustomerAuthPasswordResetPost,
  },
  {
    params: [],
    name: 'api.v1.customer.workspace.create',
    path: '/api/v1/customer/workspace',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspacePost,
  },
  {
    params: [],
    name: 'api.v1.customer.workspace.list',
    path: '/api/v1/customer/workspace',
    method: ['GET', 'HEAD'],
    types: {} as ApiV1CustomerWorkspaceGetHead,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.show',
    path: '/api/v1/customer/workspace/:workspaceId',
    method: ['GET', 'HEAD'],
    types: {} as ApiV1CustomerWorkspaceIdGetHead,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.update',
    path: '/api/v1/customer/workspace/:workspaceId',
    method: ['PUT'],
    types: {} as ApiV1CustomerWorkspaceIdPut,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.delete',
    path: '/api/v1/customer/workspace/:workspaceId',
    method: ['DELETE'],
    types: {} as ApiV1CustomerWorkspaceIdDelete,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.transfer',
    path: '/api/v1/customer/workspace/:workspaceId/transfer',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspaceIdTransferPost,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.member.create',
    path: '/api/v1/customer/workspace/:workspaceId/member',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspaceIdMemberPost,
  },
  {
    params: ['workspaceId', 'memberId'],
    name: 'api.v1.customer.workspace.member.update',
    path: '/api/v1/customer/workspace/:workspaceId/member/:memberId',
    method: ['PUT'],
    types: {} as ApiV1CustomerWorkspaceIdMemberIdPut,
  },
  {
    params: ['workspaceId', 'memberId'],
    name: 'api.v1.customer.workspace.member.delete',
    path: '/api/v1/customer/workspace/:workspaceId/member/:memberId',
    method: ['DELETE'],
    types: {} as ApiV1CustomerWorkspaceIdMemberIdDelete,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.profile.show',
    path: '/api/v1/customer/workspace/:workspaceId/profile',
    method: ['GET', 'HEAD'],
    types: {} as ApiV1CustomerWorkspaceIdProfileGetHead,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.profile.leave',
    path: '/api/v1/customer/workspace/:workspaceId/profile/leave',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspaceIdProfileLeavePost,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.blog.create',
    path: '/api/v1/customer/workspace/:workspaceId/blog',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspaceIdBlogPost,
  },
  {
    params: ['workspaceId'],
    name: 'api.v1.customer.workspace.blog.list',
    path: '/api/v1/customer/workspace/:workspaceId/blog',
    method: ['GET', 'HEAD'],
    types: {} as ApiV1CustomerWorkspaceIdBlogGetHead,
  },
  {
    params: ['workspaceId', 'blogId'],
    name: 'api.v1.customer.workspace.blog.show',
    path: '/api/v1/customer/workspace/:workspaceId/blog/:blogId',
    method: ['GET', 'HEAD'],
    types: {} as ApiV1CustomerWorkspaceIdBlogIdGetHead,
  },
  {
    params: ['workspaceId', 'blogId'],
    name: 'api.v1.customer.workspace.blog.update',
    path: '/api/v1/customer/workspace/:workspaceId/blog/:blogId',
    method: ['PUT'],
    types: {} as ApiV1CustomerWorkspaceIdBlogIdPut,
  },
  {
    params: ['workspaceId', 'blogId'],
    name: 'api.v1.customer.workspace.blog.delete',
    path: '/api/v1/customer/workspace/:workspaceId/blog/:blogId',
    method: ['DELETE'],
    types: {} as ApiV1CustomerWorkspaceIdBlogIdDelete,
  },
  {
    params: ['workspaceId', 'blogId'],
    name: 'api.v1.customer.workspace.blog.publish',
    path: '/api/v1/customer/workspace/:workspaceId/blog/:blogId/publish',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspaceIdBlogIdPublishPost,
  },
  {
    params: ['workspaceId', 'blogId'],
    name: 'api.v1.customer.workspace.blog.unpublish',
    path: '/api/v1/customer/workspace/:workspaceId/blog/:blogId/unpublish',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspaceIdBlogIdUnpublishPost,
  },
  {
    params: ['workspaceId', 'blogId'],
    name: 'api.v1.customer.workspace.blog.archive',
    path: '/api/v1/customer/workspace/:workspaceId/blog/:blogId/archive',
    method: ['POST'],
    types: {} as ApiV1CustomerWorkspaceIdBlogIdArchivePost,
  },
  {
    params: [],
    name: 'api.v1.ping',
    path: '/api/v1/ping',
    method: ['GET', 'HEAD'],
    types: {} as ApiV1PingGetHead,
  },
] as const
export const api = {
  routes,
  definition: {} as ApiDefinition,
}
